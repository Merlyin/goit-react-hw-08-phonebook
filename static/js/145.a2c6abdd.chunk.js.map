{"version":3,"file":"static/js/145.a2c6abdd.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"containerForm\":\"ContactForm_containerForm__s0x-h\",\"input\":\"ContactForm_input__Bl93P\",\"button__form\":\"ContactForm_button__form__g3dJs\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/actions';\nimport css from './ContactForm.module.css';\nimport propTypes from 'prop-types';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.phonebook.contacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  const handleAddContact = ev => {\n    ev.preventDefault();\n    if (name.trim() !== '') {\n      const existingContact = contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n\n      if (existingContact) {\n        alert(`${name} is already in contacts.`);\n      } else {\n        dispatch(addContact({ name: name.trim(), number: number.trim() }));\n        setName('');\n        setNumber('');\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className={css.contactForm}>\n        <form className={css.containerForm} onSubmit={handleAddContact}>\n          <label>Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            required\n            value={name}\n            onChange={handleNameChange}\n            className={css.input}\n          />\n          <label>Number</label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleNumberChange}\n            className={css.input}\n          />\n          <button className={css.button__form} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  onAddContact: propTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"button__list\":\"ContactList_button__list__Om+n5\",\"padding\":\"ContactList_padding__yzeMK\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\nimport propTypes from 'prop-types';\n\nexport const ContactList = ({ onDeleteContact }) => {\n  const contacts = useSelector(state => state.phonebook.contacts);\n  const filter = useSelector(state => state.phonebook.filter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div >\n      <ul className={css.padding}>\n        {filteredContacts.map(contact => (\n          <li key={contact.id}>\n            {contact.name}: {contact.number}\n            <button\n              className={css.button__list}\n              \n              onClick={() => onDeleteContact(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  onDeleteContact: propTypes.func.isRequired,\n};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/actions';\nimport PropTypes from 'prop-types';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.phonebook.filter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div className=\"padding\">\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search contacts...\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"navigationMenu\":\"UserMenu_navigationMenu__foFJs\",\"text\":\"UserMenu_text__BE4m4\",\"button\":\"UserMenu_button__310Zp\",\"button2\":\"UserMenu_button2__dXBPB\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../redux/actions';\nimport { useAuth } from '../../auth/useAuth';\nimport css from './UserMenu.module.css';\n\nexport const UserMenu = () => {\n  const { isLoggedIn, user } = useAuth();\n  const dispatch = useDispatch();\n\n  const handleLogout = async () => {\n    try {\n      await dispatch(logout());\n      window.location.href=\"/goit-react-hw-08-phonebook\";\n    } catch (error) {\n      console.error('Logout failed:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      <nav className={css.navigationMenu}>\n      {isLoggedIn && <p>{user.user.email}</p>}\n      {isLoggedIn && <button className={css.button2} onClick={handleLogout}>Logout</button>}\n      </nav>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"navigationMenu\":\"Contacts_navigationMenu__FlTkF\",\"fillIn\":\"Contacts_fillIn__WIa9L\",\"title\":\"Contacts_title__-mq9F\",\"moreText\":\"Contacts_moreText__kgAWV\",\"text\":\"Contacts_text__Cijp1\",\"button\":\"Contacts_button__vUlqW\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Filter } from '../Filter/Filter';\nimport { UserMenu } from '../UserMenu/UserMenu';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  setFilter,\n} from '../../redux/actions';\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts);\n  const filter = useSelector(state => state.filter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleAddContact = newContact => {\n    dispatch(addContact(newContact));\n  };\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div className='container'>\n      <div className={css.fillIn}>\n      <UserMenu/>\n      <h1><span className={css.title}>Phonebook</span></h1>\n      <ContactForm contacts={contacts} onAddContact={handleAddContact} />\n      <h2 className={css.moreText}>Contacts</h2>\n      <h5 className={css.moreText}>Find contacts by name</h5>\n      <Filter filter={filter} onFilterChange={handleFilterChange} />\n      <ContactList onDeleteContact={handleDeleteContact} />\n      </div>\n    </div>\n  );\n}"],"names":["ContactForm","contacts","useSelector","state","phonebook","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_jsx","children","className","css","_jsxs","onSubmit","ev","preventDefault","trim","find","contact","toLowerCase","alert","concat","addContact","type","pattern","title","required","value","onChange","event","target","ContactList","_ref","onDeleteContact","filter","filteredContacts","includes","map","onClick","id","Filter","placeholder","setFilter","UserMenu","_useAuth","useAuth","isLoggedIn","user","handleLogout","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","logout","window","location","href","t0","console","error","message","stop","apply","arguments","email","Contacts","useEffect","fetchContacts","onAddContact","newContact","onFilterChange","deleteContact"],"sourceRoot":""}