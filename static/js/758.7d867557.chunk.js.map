{"version":3,"file":"static/js/758.7d867557.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/UserMenu/UserMenu.jsx","components/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__d9qV4\",\"containerForm\":\"ContactForm_containerForm__EnUF5\",\"input\":\"ContactForm_input__dNInR\",\"button__form\":\"ContactForm_button__form__SCU+C\"};","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/actions';\r\nimport css from './ContactForm.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nexport const ContactForm = () => {\r\n  const contacts = useSelector(state => state.phonebook.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleNameChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = event => {\r\n    setNumber(event.target.value);\r\n  };\r\n\r\n  const handleAddContact = ev => {\r\n    ev.preventDefault();\r\n    if (name.trim() !== '') {\r\n      const existingContact = contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase()\r\n      );\r\n\r\n      if (existingContact) {\r\n        alert(`${name} is already in contacts.`);\r\n      } else {\r\n        dispatch(addContact({ name: name.trim(), number: number.trim() }));\r\n        setName('');\r\n        setNumber('');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.contactForm}>\r\n      <form className={css.containerForm} onSubmit={handleAddContact}>\r\n        <label>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\"\r\n          required\r\n          value={name}\r\n          onChange={handleNameChange}\r\n          className={css.input}\r\n        />\r\n        <label>Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={number}\r\n          onChange={handleNumberChange}\r\n          className={css.input}\r\n        />\r\n        <button className={css.button__form} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: propTypes.func.isRequired,\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"button__list\":\"ContactList_button__list__BGpBD\"};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport css from './ContactList.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nexport const ContactList = ({ onDeleteContact }) => {\r\n  const contacts = useSelector(state => state.phonebook.contacts);\r\n  const filter = useSelector(state => state.phonebook.filter);\r\n\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {filteredContacts.map(contact => (\r\n          <li key={contact.id}>\r\n            {contact.name}: {contact.number}\r\n            <button\r\n              className={css.button__list}\r\n              onClick={() => onDeleteContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: propTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setFilter } from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Filter = () => {\r\n  const filter = useSelector(state => state.phonebook.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFilterChange = event => {\r\n    dispatch(setFilter(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        placeholder=\"Search contacts...\"\r\n        value={filter}\r\n        onChange={handleFilterChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onFilterChange: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../../redux/actions';\r\nimport { useAuth } from '../../auth/useAuth';\r\n\r\nexport const UserMenu = () => {\r\n  const { isLoggedIn, user } = useAuth();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await dispatch(logout());\r\n    } catch (error) {\r\n      console.error('Logout failed:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn && <p>{user.user.email}</p>}\r\n      {isLoggedIn && <button onClick={handleLogout}>Logout</button>}\r\n    </div>\r\n  );\r\n};","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ContactForm } from '../ContactForm/ContactForm';\r\nimport { ContactList } from '../ContactList/ContactList';\r\nimport { Filter } from '../Filter/Filter';\r\nimport { UserMenu } from '../UserMenu/UserMenu';\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n  setFilter,\r\n} from '../../redux/actions';\r\n\r\nexport default function Contacts() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts);\r\n  const filter = useSelector(state => state.filter);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const handleAddContact = newContact => {\r\n    dispatch(addContact(newContact));\r\n  };\r\n\r\n  const handleDeleteContact = id => {\r\n    dispatch(deleteContact(id));\r\n  };\r\n\r\n  const handleFilterChange = event => {\r\n    dispatch(setFilter(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <UserMenu />\r\n      <h1>Phonebook</h1>\r\n      <ContactForm contacts={contacts} onAddContact={handleAddContact} />\r\n      <h2>Contacts</h2>\r\n      <h5>Find contacts by name</h5>\r\n      <Filter filter={filter} onFilterChange={handleFilterChange} />\r\n      <ContactList onDeleteContact={handleDeleteContact} />\r\n    </div>\r\n  );\r\n}"],"names":["ContactForm","contacts","useSelector","state","phonebook","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_jsx","className","css","children","_jsxs","onSubmit","ev","preventDefault","trim","find","contact","toLowerCase","alert","concat","addContact","type","pattern","title","required","value","onChange","event","target","ContactList","_ref","onDeleteContact","filter","filteredContacts","includes","map","onClick","id","Filter","placeholder","setFilter","UserMenu","_useAuth","useAuth","isLoggedIn","user","handleLogout","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","logout","t0","console","error","message","stop","apply","arguments","email","Contacts","useEffect","fetchContacts","onAddContact","newContact","onFilterChange","deleteContact"],"sourceRoot":""}